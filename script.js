// pre-entrega 1
// funcionalidad inicial para un simulador, no necesariamente un cÃ³digo para la entrega final.
// Mi idea para la entrega final es hacer un e-commerce

// pre entrega compuesto por: html, variables js, funciones, objetos, arrays, metodo de busqueda y filtrado sobre el array.
// centro pokemon privatizado, calculadora de costo del servicio de curaciÃ³n
// pienso en aÃ±adir al centro pokemon privatizado un simulador al final que ingrese los pokemon del usuario en un objeto llamado "hospital" o "sala de curacion" que estÃ© lleno de otros pokemones(generados internamente) y que luego, para poder retirar a los pokemon del usuario una vez recuperados tenga que pedir el nÃºmero (o una id de paciente) de cada pokemon, y si coloca otro nÃºmero le saltarÃ­a un error que dirÃ­a algo asÃ­ como: "un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon!" bÃ¡sicamente serÃ­a un juego de memoria (acordarse del id asignado a cada pokemon)

// a lo mejor podrÃ­a aÃ±adir un random entre 0-99 que serÃ­a la id del pokemon paciente y que se entregue la id luego de ingresar los datos de cada pokemon, el usuario tendrÃ­a que recordar el id de cada pokemon para despuÃ©s de sanado, pueda retirarlo. el id estarÃ­a dentro del array de objetos.



alert("Se privatizÃ³ el centro pokemon, ahora curar a tus pokemÃ³n tiene un costo! (10 dolares por pokemon, 2 dolares por HP recuperado)") // Actualmente el valor estÃ¡ a 2 dÃ³lares el HP, mÃ¡s un costo base de 10 dÃ³lares por pokemÃ³n.
let repetir = true
while(repetir) { // ciclo para ingresar un nÃºmero vÃ¡lido de pokemon
    numero = parseFloat(prompt("Ingrese cuÃ¡ntos pokemones tienes"))
    if (numero > 6 || numero < 1 || isNaN(numero)) {
        alert("NÃºmero invalido! recuerda que debieras portar entre 1 a 6 pokemones.")
    } else {
        break
    }
}

//variables vacias creadas
let hp1, hp2, hp3, hp4, hp5, hp6
let nombre1, nombre2, nombre3, nombre4, nombre5, nombre6
let nivel1, nivel2, nivel3, nivel4, nivel5, nivel6
let posicion1, posicion2, posicion3, posicion4, posicion5, posicion6
let id1, id2, id3, id4, id5, id6
let idABuscar1, idABuscar2, idABuscar3, idABuscar4, idABuscar5, idABuscar6

//switch para ingresar los datos de cada pokemon
switch(numero) {
    case 1:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON(tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente a cada uno, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        break
    case 2:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON (tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        nombre2 = prompt("Ingrese cual es tu segundo POKEMON")
        nivel2 = prompt("ingrese el NIVEL del pokemon")
        posicion2 = 2
        id2 = Math.floor(Math.random() * 99)
        while(id1 === id2) { 
            id2 = Math.floor(Math.random() * 99)
        }
        break
    case 3:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON (tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente a cada uno, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        nombre2 = prompt("Ingrese cual es tu segundo POKEMON")
        nivel2 = prompt("ingrese el NIVEL del pokemon")
        posicion2 = 2
        id2 = Math.floor(Math.random() * 99)
        while(id2 === id1) { 
            id2 = Math.floor(Math.random() * 99)
        }
        nombre3 = prompt("Ingrese cual es tu tercer POKEMON")
        nivel3 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 3
        id3 = Math.floor(Math.random() * 99)
        while(id3 === id2 || id3 === id1){ 
            id3 = Math.floor(Math.random() * 99)
        }
        break
    case 4:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON (tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente a cada uno, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        nombre2 = prompt("Ingrese cual es tu segundo POKEMON")
        nivel2 = prompt("ingrese el NIVEL del pokemon")
        posicion2 = 2
        id2 = Math.floor(Math.random() * 99)
        while(id2 === id1) { 
            id2 = Math.floor(Math.random() * 99)
        }
        nombre3 = prompt("Ingrese cual es tu tercer POKEMON")
        nivel3 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 3
        id3 = Math.floor(Math.random() * 99)
        while(id3 === id2 || id3 === id1){ 
            id3 = Math.floor(Math.random() * 99)
        }
        nombre4 = prompt("Ingrese cual es tu cuarto POKEMON")
        nivel4 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 4
        id4 = Math.floor(Math.random() * 99)
        while(id4 === id3 || id4 === id2 || id4 === id1 ){
            id4 = Math.floor(Math.random() * 99)
        }
        break
    case 5:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON (tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente a cada uno, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        nombre2 = prompt("Ingrese cual es tu segundo POKEMON")
        nivel2 = prompt("ingrese el NIVEL del pokemon")
        posicion2 = 2
        id2 = Math.floor(Math.random() * 99)
        while(id2 === id1) { 
            id2 = Math.floor(Math.random() * 99)
        }
        nombre3 = prompt("Ingrese cual es tu tercer POKEMON")
        nivel3 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 3
        id3 = Math.floor(Math.random() * 99)
        while(id3 === id2 || id3 === id1){ 
            id3 = Math.floor(Math.random() * 99)
        }
        nombre4 = prompt("Ingrese cual es tu cuarto POKEMON")
        nivel4 = prompt("ingrese el NIVEL del pokemon")
        posicion4 = 4
        id4 = Math.floor(Math.random() * 99)
        while(id4 === id3 || id4 === id2 || id4 === id1 ){
            id4 = Math.floor(Math.random() * 99)
        }
        nombre5 = prompt("Ingrese cual es tu quinto POKEMON")
        nivel5 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 5
        id5 = Math.floor(Math.random() * 99)
        while(id5 === id4 || id5 === id3 || id5 === id2 || id5 === id1 ){
            id5 = Math.floor(Math.random() * 99)
        }
        break
    case 6:
        nombre1 = prompt("Ingrese cual es tu primer POKEMON (tal vez un Pikachu? un Eevee? o cualquier otro ðŸ¥° ), se le asignarÃ¡ una id de paciente a cada uno, debes recordarla para despuÃ©s retirar a tu pokemÃ³n!")
        nivel1 = prompt("ingrese el NIVEL del pokemon")
        posicion1 = 1
        id1 = Math.floor(Math.random() * 99)
        nombre2 = prompt("Ingrese cual es tu segundo POKEMON")
        nivel2 = prompt("ingrese el NIVEL del pokemon")
        posicion2 = 2
        id2 = Math.floor(Math.random() * 99)
        while(id2 === id1) { 
            id2 = Math.floor(Math.random() * 99)
        }
        nombre3 = prompt("Ingrese cual es tu tercer POKEMON")
        nivel3 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 3
        id3 = Math.floor(Math.random() * 99)
        while(id3 === id2 || id3 === id1){ 
            id3 = Math.floor(Math.random() * 99)
        }
        nombre4 = prompt("Ingrese cual es tu cuarto POKEMON")
        nivel4 = prompt("ingrese el NIVEL del pokemon")
        posicion4 = 4
        id4 = Math.floor(Math.random() * 99)
        while(id4 === id3 || id4 === id2 || id4 === id1 ){
            id4 = Math.floor(Math.random() * 99)
        }
        nombre5 = prompt("Ingrese cual es tu quinto POKEMON")
        nivel5 = prompt("ingrese el NIVEL del pokemon")
        posicion3 = 5
        id5 = Math.floor(Math.random() * 99)
        while(id5 === id4 || id5 === id3 || id5 === id2 || id5 === id1 ){
            id5 = Math.floor(Math.random() * 99)
        }
        nombre6 = prompt("Ingrese cual es tu ultimo POKEMON")
        nivel6 = prompt("ingrese el NIVEL del pokemon")
        posicion6 = 6
        id6 = Math.floor(Math.random() * 99)
        while(id6 === id5 || id6 === id4 || id6 === id3 || id6 === id2 || id6 === id1 ){
            id6 = Math.floor(Math.random() * 99)
        }
        break
}

// clase pokemon
class Pokemon {
    constructor(nombre, nivel, posicion, id){
        this.nombre = nombre
        this.nivel = nivel
        this.posicion = posicion
        this.id = id
    }
}

const pokemon1 = new Pokemon(nombre1, nivel1, posicion1, id1)
const pokemon2 = new Pokemon(nombre2, nivel2, posicion2, id2)
const pokemon3 = new Pokemon(nombre3, nivel3, posicion3, id3)
const pokemon4 = new Pokemon(nombre4, nivel4, posicion4, id4)
const pokemon5 = new Pokemon(nombre5, nivel5, posicion5, id5)
const pokemon6 = new Pokemon(nombre6, nivel6, posicion6, id6)

const pokemones = [pokemon1]

if(numero === 2) {
    pokemones.push(pokemon2)
}
if(numero === 3) {
    pokemones.push(pokemon2, pokemon3)
}
if(numero === 4) {
    pokemones.push(pokemon2, pokemon3, pokemon4)
}
if(numero === 5) {
    pokemones.push(pokemon2, pokemon3, pokemon4, pokemon5)
}
if(numero === 6) {
    pokemones.push(pokemon2, pokemon3, pokemon4, pokemon5, pokemon6)
}
console.log(pokemones)

alert("Ahora ingrese cuÃ¡nto HP le falta a cada pokemÃ³n") 

switch (numero) { // switch para cada caso de: cantidad de pokemon del usuario/entrenador. asignaciÃ³n de id
    case 6:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)
        hp2 = prompt(`A tu ${pokemones[1].nombre} le asignaremos la id de paciente = ${pokemones[1].id}. Â¿cuÃ¡nto HP le falta?`)
        hp3 = prompt(`A tu ${pokemones[2].nombre} le asignaremos la id de paciente = ${pokemones[2].id}. Â¿cuÃ¡nto HP le falta?`)
        hp4 = prompt(`A tu ${pokemones[3].nombre} le asignaremos la id de paciente = ${pokemones[3].id}. Â¿cuÃ¡nto HP le falta?`)
        hp5 = prompt(`A tu ${pokemones[4].nombre} le asignaremos la id de paciente = ${pokemones[4].id}. Â¿cuÃ¡nto HP le falta?`)
        hp6 = prompt(`A tu ${pokemones[5].nombre} le asignaremos la id de paciente = ${pokemones[5].id}. Â¿cuÃ¡nto HP le falta?`)
        // ciclo while para validar que se ingresen numeros y que a la vez no pregunte denuevo por los datos que sÃ­ se ingresaron correctamente.
        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        while (isNaN(hp2)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[1].posicion}`)
            hp2 = prompt(`A tu ${pokemones[1].nombre} le falta:`)
        }
        while (isNaN(hp3)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[2].posicion}`)
            hp3 = prompt(`A tu ${pokemones[2].nombre} le falta:`)
        }
        while (isNaN(hp4)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[3].posicion}`)
            hp4 = prompt(`A tu ${pokemones[3].nombre} le falta:`)
        }
        while (isNaN(hp5)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[4].posicion}`)
            hp5 = prompt(`A tu ${pokemones[4].nombre} le falta:`)
        }
        while (isNaN(hp6)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[5].posicion}`)
            hp6 = prompt(`A tu ${pokemones[5].nombre} le falta:`)
        }
        break
    case 5:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)
        hp2 = prompt(`A tu ${pokemones[1].nombre} le asignaremos la id de paciente = ${pokemones[1].id}. Â¿cuÃ¡nto HP le falta?`)
        hp3 = prompt(`A tu ${pokemones[2].nombre} le asignaremos la id de paciente = ${pokemones[2].id}. Â¿cuÃ¡nto HP le falta?`)
        hp4 = prompt(`A tu ${pokemones[3].nombre} le asignaremos la id de paciente = ${pokemones[3].id}. Â¿cuÃ¡nto HP le falta?`)
        hp5 = prompt(`A tu ${pokemones[4].nombre} le asignaremos la id de paciente = ${pokemones[4].id}. Â¿cuÃ¡nto HP le falta?`)

        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        while (isNaN(hp2)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[1].posicion}`)
            hp2 = prompt(`A tu ${pokemones[1].nombre} le falta:`)
        }
        while (isNaN(hp3)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[2].posicion}`)
            hp3 = prompt(`A tu ${pokemones[2].nombre} le falta:`)
        }
        while (isNaN(hp4)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[3].posicion}`)
            hp4 = prompt(`A tu ${pokemones[3].nombre} le falta:`)
        }
        while (isNaN(hp5)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[4].posicion}`)
            hp5 = prompt(`A tu ${pokemones[4].nombre} le falta:`)
        }
        break
    case 4:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)
        hp2 = prompt(`A tu ${pokemones[1].nombre} le asignaremos la id de paciente = ${pokemones[1].id}. Â¿cuÃ¡nto HP le falta?`)
        hp3 = prompt(`A tu ${pokemones[2].nombre} le asignaremos la id de paciente = ${pokemones[2].id}. Â¿cuÃ¡nto HP le falta?`)
        hp4 = prompt(`A tu ${pokemones[3].nombre} le asignaremos la id de paciente = ${pokemones[3].id}. Â¿cuÃ¡nto HP le falta?`)

        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        while (isNaN(hp2)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[1].posicion}`)
            hp2 = prompt(`A tu ${pokemones[1].nombre} le falta:`)
        }
        while (isNaN(hp3)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[2].posicion}`)
            hp3 = prompt(`A tu ${pokemones[2].nombre} le falta:`)
        }
        while (isNaN(hp4)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[3].posicion}`)
            hp4 = prompt(`A tu ${pokemones[3].nombre} le falta:`)
        }
        break
    case 3:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)
        hp2 = prompt(`A tu ${pokemones[1].nombre} le asignaremos la id de paciente = ${pokemones[1].id}. Â¿cuÃ¡nto HP le falta?`)
        hp3 = prompt(`A tu ${pokemones[2].nombre} le asignaremos la id de paciente = ${pokemones[2].id}. Â¿cuÃ¡nto HP le falta?`)

        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        while (isNaN(hp2)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[1].posicion}`)
            hp2 = prompt(`A tu ${pokemones[1].nombre} le falta:`)
        }
        while (isNaN(hp3)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[2].posicion}`)
            hp3 = prompt(`A tu ${pokemones[2].nombre} le falta:`)
        }
        break
    case 2:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)
        hp2 = prompt(`a tu ${pokemones[1].nombre} le asignaremos la id de paciente = ${pokemones[1].id}. Â¿cuÃ¡nto HP le falta?`)

        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        while (isNaN(hp2)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[1].posicion}`)
            hp2 = prompt(`A tu ${pokemones[1].nombre} le falta:`)
        }
        break
    case 1:
        hp1 = prompt(`A tu ${pokemones[0].nombre} le asignaremos la id de paciente = ${pokemones[0].id}. Â¿cuÃ¡nto HP le falta?`)

        while (isNaN(hp1)) {
            alert(`Tienes ${pokemones.length} pokemones, pero ingresaste datos no vÃ¡lidos a tu pokemon nÂ°${pokemones[0].posicion}`)
            hp1 = prompt(`A tu ${pokemones[0].nombre} le falta:`)
        }
        break
    default:
        alert("Numero no vÃ¡lido, sÃ³lo coloca el numero")
}


// calculadora de precio del servicio se sanacion pokemon
if (isNaN(numero) || numero > 6) {
    alert("IntÃ©ntalo denuevo")
} else {
    function calculadorPoke (pokeNumber = 1, dolar = 10) { // funcion para calcular costo base 
        return pokeNumber * dolar
    }
    let  costoBase = calculadorPoke(numero)
    
    function calculadorHp(hp1 = 0, hp2 = 0, hp3 = 0, hp4 = 0, hp5 = 0, hp6 = 0) { // funcion para calcular costo total por hp
        return 2 * hp1 + 2 * hp2 + 2 * hp3 + 2 * hp4 + 2 * hp4 + 2 * hp5 + 2 * hp6
    }
    const costoHp = calculadorHp(hp1, hp2, hp3, hp4, hp5, hp6)
    
    
    function sumarCosto(pokeNumber = 1, hpNumber = 0) { // funcion para sumar ambos costos.
        const costoCura = costoBase + costoHp
        return costoCura
    }
    let costoTotal = sumarCosto(costoBase, costoHp)
    
    alert(`Curar a tus pokemon cuesta ${costoTotal} dolares!`)
}

let idEncontrado1
let idEncontrado2
let idEncontrado3
let idEncontrado4
let idEncontrado5
let idEncontrado6

alert(`Gracias por preferir Centro PokemÃ³n, sus pokemones estÃ¡n sanados!`)
do {
    repetir = false
    switch(numero) {
        case 1:
            idABuscar1 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            if (idEncontrado1 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
        case 2:
            idABuscar1 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar2 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            idEncontrado2 = pokemones.find(element => element.id === idABuscar2)
            if (idEncontrado1 === undefined || idEncontrado2 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
        case 3:
            idABuscar1 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar2 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar3 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            idEncontrado2 = pokemones.find(element => element.id === idABuscar2)
            idEncontrado3 = pokemones.find(element => element.id === idABuscar3)
            if (idEncontrado1 === undefined || idEncontrado2 === undefined || idEncontrado3 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
        case 4:
            idABuscar1 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar2 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar3 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar4 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            idEncontrado2 = pokemones.find(element => element.id === idABuscar2)
            idEncontrado3 = pokemones.find(element => element.id === idABuscar3)
            idEncontrado4 = pokemones.find(element => element.id === idABuscar4)
            if (idEncontrado1 === undefined || idEncontrado2 === undefined || idEncontrado3 === undefined || idEncontrado4 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
        case 5:
            idABuscar1 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar2 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar3 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar4 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar5 = parseFloat(prompt(`por favor vaya ingresando uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            idEncontrado2 = pokemones.find(element => element.id === idABuscar2)
            idEncontrado3 = pokemones.find(element => element.id === idABuscar3)
            idEncontrado4 = pokemones.find(element => element.id === idABuscar4)
            idEncontrado5 = pokemones.find(element => element.id === idABuscar5)
            if (idEncontrado1 === undefined || idEncontrado2 === undefined || idEncontrado3 === undefined || idEncontrado4 === undefined || idEncontrado5 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
        case 6:
            idABuscar1 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar2 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar3 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar4 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar5 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idABuscar6 = parseFloat(prompt(`por favor ingrese uno por uno los id de tus pokemon para poder entregÃ¡rselos`))
            idEncontrado1 = pokemones.find(element => element.id === idABuscar1)
            idEncontrado2 = pokemones.find(element => element.id === idABuscar2)
            idEncontrado3 = pokemones.find(element => element.id === idABuscar3)
            idEncontrado4 = pokemones.find(element => element.id === idABuscar4)
            idEncontrado5 = pokemones.find(element => element.id === idABuscar5)
            idEncontrado6 = pokemones.find(element => element.id === idABuscar6)
            if (idEncontrado1 === undefined || idEncontrado2 === undefined || idEncontrado3 === undefined || idEncontrado4 === undefined || idEncontrado5 === undefined || idEncontrado6 === undefined) {
                alert(`un entrenador que estÃ¡ sentado en la sala de espera estÃ¡ reclamando que te estÃ¡s llevando su pokemon! Ingresa el ID correcto por favor!`)
                repetir = true
                break
            } else {
                break
            }
    }
} while (repetir)
console.log(repetir)

let ids = []
ids.push(idEncontrado1)
ids.push(idEncontrado2)
ids.push(idEncontrado3)
ids.push(idEncontrado4)
ids.push(idEncontrado5)
ids.push(idEncontrado6)

console.log(ids)
console.log(idEncontrado1)
console.log(idEncontrado2)

switch(numero) {
    case 1:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel} ya estÃ¡ mucho mejor. AquÃ­ lo tiene, gracias por preferir Centro pokemon Inc.`)
        break
    case 2:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel} y ${pokemones[1].nombre} de nivel ${ids[1].nivel} ya estÃ¡n mucho mejor. AquÃ­ los tiene, gracias por preferir Centro pokemon Inc.`)
        break
    case 3:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel}, ${pokemones[1].nombre} de nivel ${ids[1].nivel} y ${pokemones[2].nombre} de nivel ${ids[2].nivel} ya estÃ¡n mucho mejor. AquÃ­ los tiene, gracias por preferir Centro pokemon Inc.`)
        break
    case 4:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel}, ${pokemones[1].nombre} de nivel ${ids[1].nivel}, ${pokemones[2].nombre} de nivel ${ids[2].nivel} y ${pokemones[3].nombre} de nivel ${ids[3].nivel} ya estÃ¡n mucho mejor. AquÃ­ los tiene, gracias por preferir Centro pokemon Inc.`)
        break
    case 5:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel}, ${pokemones[1].nombre} de nivel ${ids[1].nivel}, ${pokemones[2].nombre} de nivel ${ids[2].nivel}, ${pokemones[3].nombre} de nivel ${ids[3].nivel}y ${pokemones[4].nombre} de nivel ${ids[4].nivel}ya estÃ¡n mucho mejor. AquÃ­ los tiene, gracias por preferir Centro pokemon Inc.`)
        break
    case 6:
        alert(`${ids[0].nombre} de nivel ${ids[0].nivel}, ${pokemones[1].nombre} de nivel ${ids[1].nivel}, ${pokemones[2].nombre} de nivel ${ids[2].nivel}, ${pokemones[3].nombre} de nivel ${ids[3].nivel}y ${pokemones[4].nombre} de nivel ${ids[4].nivel} y ${pokemones[5].nombre} de nivel ${ids[5].nivel} ya estÃ¡n mucho mejor. AquÃ­ los tiene, gracias por preferir Centro pokemon Inc.`)
        break
}

